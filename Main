import time

board = {1: " ", 2: " ", 3: " ",
         4: " ", 5: " ", 6: " ",
         7: " ", 8: " ", 9: " "}


def draw():
    drawornot = True
    for key in board.keys():
        if board[key] == " ":
            drawornot = False

    return drawornot


def winner():
    if (board[1] == board[2] and board[1] == board[3] and board[1] != ' '):
        return True
    elif (board[4] == board[5] and board[4] == board[6] and board[4] != ' '):
        return True
    elif (board[7] == board[8] and board[7] == board[9] and board[7] != ' '):
        return True
    elif (board[1] == board[4] and board[1] == board[7] and board[1] != ' '):
        return True
    elif (board[2] == board[5] and board[2] == board[8] and board[2] != ' '):
        return True
    elif (board[3] == board[6] and board[3] == board[9] and board[3] != ' '):
        return True
    elif (board[1] == board[5] and board[1] == board[9] and board[1] != ' '):
        return True
    elif (board[7] == board[5] and board[7] == board[3] and board[7] != ' '):
        return True
    else:
        return False


def whowon(player):
    if (board[1] == board[2] and board[1] == board[3] and board[1] == player):
        return True
    elif (board[4] == board[5] and board[4] == board[6] and board[4] == player):
        return True
    elif (board[7] == board[8] and board[7] == board[9] and board[7] == player):
        return True
    elif (board[1] == board[4] and board[1] == board[7] and board[1] == player):
        return True
    elif (board[2] == board[5] and board[2] == board[8] and board[2] == player):
        return True
    elif (board[3] == board[6] and board[3] == board[9] and board[3] == player):
        return True
    elif (board[1] == board[5] and board[1] == board[9] and board[1] == player):
        return True
    elif (board[7] == board[5] and board[7] == board[3] and board[7] == player):
        return True
    else:
        return False


def printboard(board):
    print(board[1] + "|" + board[2] + "|" + board[3])
    print("------")
    print(board[4] + "|" + board[5] + "|" + board[6])
    print("------")
    print(board[7] + "|" + board[8] + "|" + board[9])

printboard(board)
print()


def freespace(position):
    if board[position] == " ":
        return True
    else:
        return False


def insertXorO(xoro, position):
    if freespace(position):
        board[position] = xoro
        printboard(board)
        if draw():
            print("draw")
            exit()
        if winner():
            if xoro == "X":
                print("I win, you cant beat me!! :yawn:")
                exit()
            else:
                print("Congrats..you won?")
                exit()
    else:
        print("Already chosen! please make another choice")
        position = int(input("Please type new location"))
        insertXorO(xoro, position)


def humanmove():
    position = int(input("please make a choice (1-9)"))
    insertXorO("O", position)
    print()
    print("hmmm", end="")
    time.sleep(0.5)
    print(".",end="")
    time.sleep(0.5)
    print(".", end="")
    time.sleep(0.5)
    print(".", end="")
    time.sleep(2)


def AI():
    print("Ill make a move")
    print()
    bestscore = -10000
    bestmove = 0
    for key in board.keys():
        if board[key]== " ":
            board[key]="X"
            score=minimax(board,0,False)
            board[key]=" "
            if(score>bestscore):
                bestscore=score
                bestmove=key

    insertXorO("X",bestmove)
    return


def minimax(board,depth,isMaximizing):
    if draw():
        return 0
    elif whowon("X"):
        return 100
    elif whowon("O"):
        return -100
    if isMaximizing==True:
        bestscore = -10000
        for key in board.keys():
            if board[key] == " ":
                board[key] = "X"
                score = minimax(board, 0, False)
                board[key] = " "
                if (score > bestscore):
                    bestscore = score

        return bestscore
    else:
        bestscore = 10000
        for key in board.keys():
            if board[key] == " ":
                board[key] = "O"
                score = minimax(board, depth+1, True)
                board[key] = " "
                if (score < bestscore):
                    bestscore = score
        return bestscore

while not winner():
    AI()
    humanmove()
